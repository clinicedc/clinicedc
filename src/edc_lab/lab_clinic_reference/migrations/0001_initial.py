# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-05-07 13:54
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import django_revision.revision_field
import edc_base.model.fields.hostname_modification_field
import edc_base.model.fields.userfield


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lab_clinic_api', '0002_auto_20160507_1354'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GradingList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('name', models.CharField(max_length=50, verbose_name='List name')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('list_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GradingListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('code', models.CharField(blank=True, max_length=25, null=True)),
                ('scale', models.CharField(choices=[('increasing', 'increasing'), ('decreasing', 'decreasing')], default='increasing', max_length=25)),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('MF', 'Male and Female')], max_length=10, verbose_name='Gender')),
                ('hiv_status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('ANY', 'Any')], default='ANY', max_length=10)),
                ('value_unit', models.CharField(choices=[('%', '%'), ('10^0/L', '10^0/L'), ('10^3/uL', '10^3/uL'), ('10^6/uL', '10^6/uL'), ('cells/ul', 'cells/ul'), ('copies/ml', 'copies/ml'), ('fL', 'fL'), ('g/dL', 'g/dL'), ('g/L', 'g/L'), ('mg/dL', 'mg/dL'), ('mg/L', 'mg/L'), ('mm^3', 'mm^3'), ('mm/H', 'mm/H'), ('mmol/L', 'mmol/L'), ('ng/ml', 'ng/ml'), ('pg', 'pg'), ('ratio', 'ratio'), ('U/L', 'U/L'), ('umol/L', 'umol/L')], max_length=10, null=True)),
                ('value_low', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True, verbose_name='lower')),
                ('value_low_quantifier', models.CharField(default='>=', max_length=10)),
                ('value_high', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True, verbose_name='upper')),
                ('value_high_quantifier', models.CharField(default='<=', max_length=10)),
                ('age_low', models.IntegerField(blank=True, default=0, null=True)),
                ('age_low_unit', models.CharField(blank=True, default='D', max_length=10)),
                ('age_low_quantifier', models.CharField(blank=True, default='>=', max_length=10)),
                ('age_high', models.IntegerField(blank=True, default=99999, null=True)),
                ('age_high_unit', models.CharField(blank=True, default='Y', max_length=10)),
                ('age_high_quantifier', models.CharField(blank=True, default='<=', max_length=10)),
                ('panic_value_low', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('panic_value_high', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('active', models.BooleanField(default=True, help_text='if flagged as inactive, will not be used for evaluation.')),
                ('dummy', models.BooleanField(default=False, help_text='True if no values for this grade/range, e.g. infant Bilirubin.')),
                ('comment', models.CharField(blank=True, max_length=250, verbose_name='Comment')),
                ('import_datetime', models.DateTimeField(blank=True, null=True)),
                ('grade', models.IntegerField()),
                ('value_low_calc', models.CharField(choices=[('ABSOLUTE', 'Absolute'), ('LLN', 'LLN'), ('ULN', 'ULN')], default='ABSOLUTE', max_length=10, verbose_name='Lower value is')),
                ('value_high_calc', models.CharField(choices=[('ABSOLUTE', 'Absolute'), ('LLN', 'LLN'), ('ULN', 'ULN')], default='ABSOLUTE', max_length=10, verbose_name='Upper value is')),
                ('use_uln', models.BooleanField(default=False, help_text='lower/upper is X ULN')),
                ('use_lln', models.BooleanField(default=False, help_text='lower/upper is X LLN')),
                ('fasting', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=10)),
                ('serum', models.CharField(choices=[('HIGH', 'High'), ('LOW', 'Low'), ('N/A', 'Not applicable')], default='N/A', max_length=10)),
                ('grading_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab_clinic_reference.GradingList')),
                ('test_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab_clinic_api.TestCode')),
            ],
            options={
                'ordering': ['test_code', 'age_low', 'age_low_unit'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalGradingListItem',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('code', models.CharField(blank=True, max_length=25, null=True)),
                ('scale', models.CharField(choices=[('increasing', 'increasing'), ('decreasing', 'decreasing')], default='increasing', max_length=25)),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('MF', 'Male and Female')], max_length=10, verbose_name='Gender')),
                ('hiv_status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('ANY', 'Any')], default='ANY', max_length=10)),
                ('value_unit', models.CharField(choices=[('%', '%'), ('10^0/L', '10^0/L'), ('10^3/uL', '10^3/uL'), ('10^6/uL', '10^6/uL'), ('cells/ul', 'cells/ul'), ('copies/ml', 'copies/ml'), ('fL', 'fL'), ('g/dL', 'g/dL'), ('g/L', 'g/L'), ('mg/dL', 'mg/dL'), ('mg/L', 'mg/L'), ('mm^3', 'mm^3'), ('mm/H', 'mm/H'), ('mmol/L', 'mmol/L'), ('ng/ml', 'ng/ml'), ('pg', 'pg'), ('ratio', 'ratio'), ('U/L', 'U/L'), ('umol/L', 'umol/L')], max_length=10, null=True)),
                ('value_low', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True, verbose_name='lower')),
                ('value_low_quantifier', models.CharField(default='>=', max_length=10)),
                ('value_high', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True, verbose_name='upper')),
                ('value_high_quantifier', models.CharField(default='<=', max_length=10)),
                ('age_low', models.IntegerField(blank=True, default=0, null=True)),
                ('age_low_unit', models.CharField(blank=True, default='D', max_length=10)),
                ('age_low_quantifier', models.CharField(blank=True, default='>=', max_length=10)),
                ('age_high', models.IntegerField(blank=True, default=99999, null=True)),
                ('age_high_unit', models.CharField(blank=True, default='Y', max_length=10)),
                ('age_high_quantifier', models.CharField(blank=True, default='<=', max_length=10)),
                ('panic_value_low', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('panic_value_high', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('active', models.BooleanField(default=True, help_text='if flagged as inactive, will not be used for evaluation.')),
                ('dummy', models.BooleanField(default=False, help_text='True if no values for this grade/range, e.g. infant Bilirubin.')),
                ('comment', models.CharField(blank=True, max_length=250, verbose_name='Comment')),
                ('import_datetime', models.DateTimeField(blank=True, null=True)),
                ('grade', models.IntegerField()),
                ('value_low_calc', models.CharField(choices=[('ABSOLUTE', 'Absolute'), ('LLN', 'LLN'), ('ULN', 'ULN')], default='ABSOLUTE', max_length=10, verbose_name='Lower value is')),
                ('value_high_calc', models.CharField(choices=[('ABSOLUTE', 'Absolute'), ('LLN', 'LLN'), ('ULN', 'ULN')], default='ABSOLUTE', max_length=10, verbose_name='Upper value is')),
                ('use_uln', models.BooleanField(default=False, help_text='lower/upper is X ULN')),
                ('use_lln', models.BooleanField(default=False, help_text='lower/upper is X LLN')),
                ('fasting', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=10)),
                ('serum', models.CharField(choices=[('HIGH', 'High'), ('LOW', 'Low'), ('N/A', 'Not applicable')], default='N/A', max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('grading_list', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lab_clinic_reference.GradingList')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('test_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lab_clinic_api.TestCode')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical grading list item',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalReferenceRangeListItem',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('code', models.CharField(blank=True, max_length=25, null=True)),
                ('scale', models.CharField(choices=[('increasing', 'increasing'), ('decreasing', 'decreasing')], default='increasing', max_length=25)),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('MF', 'Male and Female')], max_length=10, verbose_name='Gender')),
                ('hiv_status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('ANY', 'Any')], default='ANY', max_length=10)),
                ('value_unit', models.CharField(choices=[('%', '%'), ('10^0/L', '10^0/L'), ('10^3/uL', '10^3/uL'), ('10^6/uL', '10^6/uL'), ('cells/ul', 'cells/ul'), ('copies/ml', 'copies/ml'), ('fL', 'fL'), ('g/dL', 'g/dL'), ('g/L', 'g/L'), ('mg/dL', 'mg/dL'), ('mg/L', 'mg/L'), ('mm^3', 'mm^3'), ('mm/H', 'mm/H'), ('mmol/L', 'mmol/L'), ('ng/ml', 'ng/ml'), ('pg', 'pg'), ('ratio', 'ratio'), ('U/L', 'U/L'), ('umol/L', 'umol/L')], max_length=10, null=True)),
                ('value_low', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True, verbose_name='lower')),
                ('value_low_quantifier', models.CharField(default='>=', max_length=10)),
                ('value_high', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True, verbose_name='upper')),
                ('value_high_quantifier', models.CharField(default='<=', max_length=10)),
                ('age_low', models.IntegerField(blank=True, default=0, null=True)),
                ('age_low_unit', models.CharField(blank=True, default='D', max_length=10)),
                ('age_low_quantifier', models.CharField(blank=True, default='>=', max_length=10)),
                ('age_high', models.IntegerField(blank=True, default=99999, null=True)),
                ('age_high_unit', models.CharField(blank=True, default='Y', max_length=10)),
                ('age_high_quantifier', models.CharField(blank=True, default='<=', max_length=10)),
                ('panic_value_low', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('panic_value_high', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('active', models.BooleanField(default=True, help_text='if flagged as inactive, will not be used for evaluation.')),
                ('dummy', models.BooleanField(default=False, help_text='True if no values for this grade/range, e.g. infant Bilirubin.')),
                ('comment', models.CharField(blank=True, max_length=250, verbose_name='Comment')),
                ('import_datetime', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical reference range list item',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='ReferenceRangeList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('name', models.CharField(max_length=50, verbose_name='List name')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('list_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReferenceRangeListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('code', models.CharField(blank=True, max_length=25, null=True)),
                ('scale', models.CharField(choices=[('increasing', 'increasing'), ('decreasing', 'decreasing')], default='increasing', max_length=25)),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('MF', 'Male and Female')], max_length=10, verbose_name='Gender')),
                ('hiv_status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('ANY', 'Any')], default='ANY', max_length=10)),
                ('value_unit', models.CharField(choices=[('%', '%'), ('10^0/L', '10^0/L'), ('10^3/uL', '10^3/uL'), ('10^6/uL', '10^6/uL'), ('cells/ul', 'cells/ul'), ('copies/ml', 'copies/ml'), ('fL', 'fL'), ('g/dL', 'g/dL'), ('g/L', 'g/L'), ('mg/dL', 'mg/dL'), ('mg/L', 'mg/L'), ('mm^3', 'mm^3'), ('mm/H', 'mm/H'), ('mmol/L', 'mmol/L'), ('ng/ml', 'ng/ml'), ('pg', 'pg'), ('ratio', 'ratio'), ('U/L', 'U/L'), ('umol/L', 'umol/L')], max_length=10, null=True)),
                ('value_low', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True, verbose_name='lower')),
                ('value_low_quantifier', models.CharField(default='>=', max_length=10)),
                ('value_high', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True, verbose_name='upper')),
                ('value_high_quantifier', models.CharField(default='<=', max_length=10)),
                ('age_low', models.IntegerField(blank=True, default=0, null=True)),
                ('age_low_unit', models.CharField(blank=True, default='D', max_length=10)),
                ('age_low_quantifier', models.CharField(blank=True, default='>=', max_length=10)),
                ('age_high', models.IntegerField(blank=True, default=99999, null=True)),
                ('age_high_unit', models.CharField(blank=True, default='Y', max_length=10)),
                ('age_high_quantifier', models.CharField(blank=True, default='<=', max_length=10)),
                ('panic_value_low', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('panic_value_high', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('active', models.BooleanField(default=True, help_text='if flagged as inactive, will not be used for evaluation.')),
                ('dummy', models.BooleanField(default=False, help_text='True if no values for this grade/range, e.g. infant Bilirubin.')),
                ('comment', models.CharField(blank=True, max_length=250, verbose_name='Comment')),
                ('import_datetime', models.DateTimeField(blank=True, null=True)),
                ('reference_range_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab_clinic_reference.ReferenceRangeList')),
                ('test_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab_clinic_api.TestCode')),
            ],
            options={
                'ordering': ['test_code', 'age_low', 'age_low_unit'],
            },
        ),
        migrations.AddField(
            model_name='historicalreferencerangelistitem',
            name='reference_range_list',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lab_clinic_reference.ReferenceRangeList'),
        ),
        migrations.AddField(
            model_name='historicalreferencerangelistitem',
            name='test_code',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lab_clinic_api.TestCode'),
        ),
    ]
