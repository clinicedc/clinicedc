# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-02 12:04
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_crypto_fields.fields.encrypted_text_field
import django_extensions.db.fields
import django_revision.revision_field
import edc_base.model.fields.hostname_modification_field
import edc_base.model.fields.userfield
import edc_base.model.fields.uuid_auto_field


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('edc_visit_schedule', '__first__'),
        ('edc_registration', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('best_appt_datetime', models.DateTimeField(editable=False, null=True)),
                ('appt_close_datetime', models.DateTimeField(editable=False, null=True)),
                ('visit_instance', models.CharField(blank=True, db_index=True, default='0', help_text='A decimal to represent an additional report to be included with the original visit report. (NNNN.0)', max_length=1, null=True, validators=[django.core.validators.RegexValidator('[0-9]', 'Must be a number from 0-9')], verbose_name='Instance')),
                ('appt_datetime', models.DateTimeField(db_index=True, verbose_name='Appointment date and time')),
                ('timepoint_datetime', models.DateTimeField(editable=False, help_text='calculated appointment datetime. Do not change', null=True, verbose_name='Timepoint date and time')),
                ('appt_status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('incomplete', 'Incomplete'), ('done', 'Done'), ('cancelled', 'Cancelled')], db_index=True, default='new', max_length=25, verbose_name='Status')),
                ('appt_reason', models.CharField(blank=True, help_text='Reason for appointment', max_length=25, verbose_name='Reason for appointment')),
                ('contact_tel', models.CharField(blank=True, max_length=250, verbose_name='Contact Tel')),
                ('comment', models.CharField(blank=True, max_length=250, verbose_name='Comment')),
                ('is_confirmed', models.BooleanField(default=False, editable=False)),
                ('contact_count', models.IntegerField(default=0, editable=False)),
                ('dashboard_type', models.CharField(blank=True, db_index=True, editable=False, help_text='hold dashboard_type variable, set by dashboard', max_length=25, null=True)),
                ('appt_type', models.CharField(choices=[('clinic', 'In clinic'), ('telephone', 'By telephone'), ('home', 'At home')], default='clinic', help_text='Default for subject may be edited in admin under section bhp_subject. See Subject Configuration.', max_length=20, verbose_name='Appointment type')),
                ('registered_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='edc_registration.RegisteredSubject')),
            ],
            options={
                'ordering': ['registered_subject', 'appt_datetime'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalAppointment',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(db_index=True, editable=False, help_text='System field. UUID primary key.')),
                ('best_appt_datetime', models.DateTimeField(editable=False, null=True)),
                ('appt_close_datetime', models.DateTimeField(editable=False, null=True)),
                ('visit_instance', models.CharField(blank=True, db_index=True, default='0', help_text='A decimal to represent an additional report to be included with the original visit report. (NNNN.0)', max_length=1, null=True, validators=[django.core.validators.RegexValidator('[0-9]', 'Must be a number from 0-9')], verbose_name='Instance')),
                ('appt_datetime', models.DateTimeField(db_index=True, verbose_name='Appointment date and time')),
                ('timepoint_datetime', models.DateTimeField(editable=False, help_text='calculated appointment datetime. Do not change', null=True, verbose_name='Timepoint date and time')),
                ('appt_status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('incomplete', 'Incomplete'), ('done', 'Done'), ('cancelled', 'Cancelled')], db_index=True, default='new', max_length=25, verbose_name='Status')),
                ('appt_reason', models.CharField(blank=True, help_text='Reason for appointment', max_length=25, verbose_name='Reason for appointment')),
                ('contact_tel', models.CharField(blank=True, max_length=250, verbose_name='Contact Tel')),
                ('comment', models.CharField(blank=True, max_length=250, verbose_name='Comment')),
                ('is_confirmed', models.BooleanField(default=False, editable=False)),
                ('contact_count', models.IntegerField(default=0, editable=False)),
                ('dashboard_type', models.CharField(blank=True, db_index=True, editable=False, help_text='hold dashboard_type variable, set by dashboard', max_length=25, null=True)),
                ('appt_type', models.CharField(choices=[('clinic', 'In clinic'), ('telephone', 'By telephone'), ('home', 'At home')], default='clinic', help_text='Default for subject may be edited in admin under section bhp_subject. See Subject Configuration.', max_length=20, verbose_name='Appointment type')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registered_subject', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_registration.RegisteredSubject')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical appointment',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPreAppointmentContact',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(db_index=True, editable=False, help_text='System field. UUID primary key.')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Appointment confirmed')),
                ('contact_datetime', models.DateTimeField(verbose_name='Date of call')),
                ('is_contacted', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, verbose_name='Did someone answer?')),
                ('information_provider', models.CharField(blank=True, max_length=20, null=True, verbose_name='Who answered?')),
                ('comment', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('appointment', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_appointment.Appointment')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical pre appointment contact',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTimePointStatus',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(db_index=True, editable=False, help_text='System field. UUID primary key.')),
                ('visit_code', models.CharField(max_length=15)),
                ('subject_identifier', models.CharField(max_length=25)),
                ('close_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Date closed.')),
                ('status', models.CharField(choices=[('open', 'Open'), ('feedback', 'Feedback'), ('closed', 'Closed')], default='open', max_length=15)),
                ('comment', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=500, null=True)),
                ('subject_withdrew', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text='Use ONLY when subject has changed mind and wishes to withdraw consent', max_length=15, null=True, verbose_name='Did the participant withdraw consent?')),
                ('reasons_withdrawn', models.CharField(choices=[('changed_mind', 'Subject changed mind'), ('N/A', 'Not applicable')], default='N/A', max_length=35, null=True, verbose_name='Reason participant withdrew consent')),
                ('withdraw_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Date and time participant withdrew consent')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical Time Point Completion',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('holiday_name', models.CharField(default='holiday', max_length=25)),
                ('holiday_date', models.DateField(unique=True)),
            ],
            options={
                'ordering': ['holiday_date'],
            },
        ),
        migrations.CreateModel(
            name='PreAppointmentContact',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Appointment confirmed')),
                ('contact_datetime', models.DateTimeField(verbose_name='Date of call')),
                ('is_contacted', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10, verbose_name='Did someone answer?')),
                ('information_provider', models.CharField(blank=True, max_length=20, null=True, verbose_name='Who answered?')),
                ('comment', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=100, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edc_appointment.Appointment')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectConfiguration',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=36)),
                ('default_appt_type', models.CharField(choices=[('clinic', 'In clinic'), ('telephone', 'By telephone'), ('home', 'At home')], default='clinic', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='TimePointStatus',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('visit_code', models.CharField(max_length=15)),
                ('subject_identifier', models.CharField(max_length=25)),
                ('close_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Date closed.')),
                ('status', models.CharField(choices=[('open', 'Open'), ('feedback', 'Feedback'), ('closed', 'Closed')], default='open', max_length=15)),
                ('comment', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=500, null=True)),
                ('subject_withdrew', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text='Use ONLY when subject has changed mind and wishes to withdraw consent', max_length=15, null=True, verbose_name='Did the participant withdraw consent?')),
                ('reasons_withdrawn', models.CharField(choices=[('changed_mind', 'Subject changed mind'), ('N/A', 'Not applicable')], default='N/A', max_length=35, null=True, verbose_name='Reason participant withdrew consent')),
                ('withdraw_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Date and time participant withdrew consent')),
            ],
            options={
                'ordering': ['subject_identifier', 'visit_code'],
                'verbose_name': 'Time Point Completion',
                'verbose_name_plural': 'Time Point Completion',
            },
        ),
        migrations.AlterUniqueTogether(
            name='timepointstatus',
            unique_together=set([('subject_identifier', 'visit_code')]),
        ),
        migrations.AddField(
            model_name='historicalappointment',
            name='time_point_status',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_appointment.TimePointStatus'),
        ),
        migrations.AddField(
            model_name='historicalappointment',
            name='visit_definition',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_visit_schedule.VisitDefinition'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='time_point_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edc_appointment.TimePointStatus'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='visit_definition',
            field=models.ForeignKey(help_text='For tracking within the window period of a visit, use the decimal convention. Format is NNNN.N. e.g 1000.0, 1000.1, 1000.2, etc)', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='edc_visit_schedule.VisitDefinition', verbose_name='Visit'),
        ),
        migrations.AlterUniqueTogether(
            name='preappointmentcontact',
            unique_together=set([('contact_datetime', 'appointment')]),
        ),
        migrations.AlterUniqueTogether(
            name='appointment',
            unique_together=set([('registered_subject', 'visit_definition', 'visit_instance')]),
        ),
    ]
